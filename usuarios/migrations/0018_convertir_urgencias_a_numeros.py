# Generated by Django - Migraci√≥n de urgencias para app 'usuarios'

from django.db import migrations

def convertir_urgencias_texto_a_numero(apps, schema_editor):
    """Convierte urgencias de texto ('baja', 'media') a n√∫meros (1, 2, 3, 4)"""
    
    # üîß CORREGIDO: Obtener el modelo Ticket de la app 'usuarios'
    Ticket = apps.get_model('usuarios', 'Ticket')
    
    # Mapa de conversi√≥n
    conversiones = {
        'baja': 1,
        'media': 2,
        'alta': 3,
        'critica': 4,
        'cr√≠tica': 4,
        # Por si ya hay algunos n√∫meros como string
        '1': 1,
        '2': 2, 
        '3': 3,
        '4': 4,
    }
    
    # Contar tickets para mostrar progreso
    total_tickets = Ticket.objects.count()
    convertidos = 0
    
    print(f"üîÑ Iniciando conversi√≥n de {total_tickets} tickets...")
    
    # Convertir todos los tickets
    for ticket in Ticket.objects.all():
        urgencia_original = ticket.nivel_urgencia
        
        # Convertir a string y lowercase para comparar
        urgencia_str = str(urgencia_original).lower().strip()
        
        if urgencia_str in conversiones:
            nuevo_valor = conversiones[urgencia_str]
            ticket.nivel_urgencia = nuevo_valor
            ticket.save()
            convertidos += 1
            print(f"‚úÖ Ticket {ticket.id}: '{urgencia_original}' ‚Üí {nuevo_valor}")
        else:
            print(f"‚ö†Ô∏è  Ticket {ticket.id}: Urgencia no reconocida '{urgencia_original}'")
    
    print(f"üéâ Conversi√≥n completada: {convertidos}/{total_tickets} tickets convertidos")

def revertir_urgencias_numero_a_texto(apps, schema_editor):
    """Revierte la conversi√≥n (por si necesitas volver atr√°s)"""
    
    # üîß CORREGIDO: Obtener el modelo Ticket de la app 'usuarios'
    Ticket = apps.get_model('usuarios', 'Ticket')
    
    # Mapa de reversi√≥n
    reversiones = {
        1: 'baja',
        2: 'media',
        3: 'alta', 
        4: 'critica',
    }
    
    total_tickets = Ticket.objects.count()
    revertidos = 0
    
    print(f"üîÑ Revirtiendo {total_tickets} tickets...")
    
    for ticket in Ticket.objects.all():
        urgencia_original = ticket.nivel_urgencia
        
        try:
            urgencia_num = int(urgencia_original)
            if urgencia_num in reversiones:
                nuevo_valor = reversiones[urgencia_num]
                ticket.nivel_urgencia = nuevo_valor
                ticket.save()
                revertidos += 1
                print(f"‚Ü©Ô∏è  Ticket {ticket.id}: {urgencia_original} ‚Üí '{nuevo_valor}'")
        except (ValueError, TypeError):
            print(f"‚ö†Ô∏è  Ticket {ticket.id}: No se pudo revertir '{urgencia_original}'")
    
    print(f"üéâ Reversi√≥n completada: {revertidos}/{total_tickets} tickets revertidos")

class Migration(migrations.Migration):

    dependencies = [
        # üîß CORREGIDO: Usar la app 'usuarios' y tu √∫ltima migraci√≥n
        ('usuarios', '0017_usuario_foto_perfil'),
    ]

    operations = [
        migrations.RunPython(
            convertir_urgencias_texto_a_numero,
            reverse_code=revertir_urgencias_numero_a_texto,
        ),
    ]